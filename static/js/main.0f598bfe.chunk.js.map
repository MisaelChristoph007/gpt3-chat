{"version":3,"sources":["components/MessageContent.js","redux/User/user.types.js","redux/User/user.reducer.js","redux/rootReducer.js","redux/store.js","SessionLogic.js","components/MessagePhoto.js","components/MessageCard.js","components/MessageBoard.js","components/NavBarGuest.js","components/NavBarUser.js","components/NavBar.js","ChatPage.js","ChatPageRobot.js","ChatPageGlobal.js","Home.js","Authed.js","Unauthed.js","redux/User/user.actions.js","Login.js","Logout.js","Page404.js","Signup.js","Profile.js","App.js","index.js"],"names":["MessageContent","props","isSent","className","class","content","name","LOGIN","LOGOUT","cookies","Cookies","INITIAL_STATE","userInfo","undefined","reducer","state","action","type","set","token","remove","rootReducer","combineReducers","user","userReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","backendUrl","process","protocol","isLoggedIn","getState","getPhotoUrl","username","MessagePhoto","src","alt","MessageCard","console","log","motion","div","style","opacity","animate","sender","MessageBoard","messagesEnd","useEffect","scrollToBottom","scrollIntoView","behavior","messages","data","map","msgObj","index","text","id","ref","el","NavBarUser","useState","isMobileMenuShown","setMobileMenuShow","onClick","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","to","activeClassName","connect","loggedIn","dropdownToggled","setDropdownToggle","aria-expanded","aria-haspopup","uid","role","aria-orientation","aria-labelledby","NavBar","NavBarGuest","setMessages","inputText","setInputText","socket","setSocket","newSocket","io","roomName","emit","on","addMessage","disconnect","inputEl","oldMessages","sendMessage","trim","newMessageData","time","Date","toLocaleString","value","alert","placeholder","onChange","e","target","onKeyPress","key","ChatPageRobot","ChatPageGlobal","Home","pathname","from","location","Authed","Component","component","hasFooterHeader","rest","authed","page","render","Unauthed","logOut","dispatch","logIn","usernameEl","passwordEl","confirmStatus","setConfirmStatus","redirectHome","setredirectHome","responseGoogle","reponse","onSubmit","preventDefault","password","axios","method","url","validateStatus","then","res","ok","message","setTimeout","catch","error","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Page404","SignUp","emailEl","redirectLogin","setRedirectLogin","formObj","email","file","setFile","inputFileButton","useRef","current","click","event","files","display","App","basename","GH_DEPLOY","path","exact","Login","Signup","Profile","Logout","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f598bfe.chunk.js","sourcesContent":["function MessageContent(props) {\n  if(props.isSent){\n    return (\n      <div className=\"px-6 py-4\">\n        <div class=\"text-right text-xl font-medium text-black\">You</div>\n        <p class=\"text-gray-500\">{props.content}</p>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"px-6 py-4\">\n        <div class=\"text-left text-xl font-medium text-black\">{props.name}</div>\n        <p class=\"text-gray-500\">{props.content}</p>\n      </div>\n    )\n  }\n}\n\nexport default MessageContent;","export const LOGIN = 'LOGIN';\n\nexport const LOGOUT = 'LOGOUT';","import { LOGIN, LOGOUT } from './user.types';\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nconst INITIAL_STATE = {\n    userInfo: undefined,\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case LOGIN:\n          cookies.set(\"token\", action.token)\n           return {\n             ...state, userInfo: action.userInfo\n           };\n        case LOGOUT:\n          cookies.remove(\"token\")\n           return {\n              ...state, userInfo: undefined\n           };\n         default: return state;\n    }\n};\n\nexport default reducer;","import { combineReducers } from 'redux'\nimport userReducer from './User/user.reducer'\n\nconst rootReducer = combineReducers({\n    user: userReducer\n})\n\nexport default rootReducer;","import { createStore } from 'redux'\n\nimport rootReducer from './rootReducer'\n\nconst store = createStore(rootReducer,\n    +  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default store;","import axios from 'axios'\nimport store from './redux/store'\n\nconst backendUrl = process.env.REACT_APP_GPT_URL\nconst protocol  = process.env.REACT_APP_GPT_PROTOCOL\n\nexport function isLoggedIn(){\n    const state = store.getState()\n    return state.user.userInfo !== undefined\n}\n\nexport function isLoggedJWTPoll(){\n    return false;\n}\n\nexport function UserLogin(username, password){\n    return axios({\n        method: 'post',\n        'Content-Type': 'application/json',\n        url: `${protocol}://${backendUrl}/api/user/login`,\n        validateStatus: false,\n        data: {\n            username: username,\n            password: password\n        }\n    })\n}\n\nexport function UserSignUp(formObj){\n    return axios({\n        method: 'post',\n        'Content-Type': 'application/json',\n        url: `${protocol}://${backendUrl}/api/user/signup`,\n        validateStatus: false,\n        data: formObj\n    })\n}\n\nexport function getUser(){\n    const state = store.getState();\n    console.log(state.user)\n    return state.user.userInfo\n}\n\nexport function getUsername(){\n    return getUser()?.username\n}\n\nexport function getPhotoUrl(username){\n    return \"http://192.168.0.10:4000/images/\" + username + \".jpeg\"\n}","import { getPhotoUrl } from '../SessionLogic' \n\nfunction MessagePhoto(props) {\n  return (\n    <div className=\"flex-shrink-0 place-self-start mt-5\">\n      <img src={getPhotoUrl(props.username)} alt=\"\"\n          className=\"h-12 w-12 rounded-full\" />\n    </div>\n  )\n}\n\nexport default MessagePhoto;","import MessageContent from './MessageContent';\nimport MessagePhoto from './MessagePhoto';\nimport {motion} from 'framer-motion'\n\nfunction MessageCard(props) {\n\n  console.log(props)\n  console.log(props)\n  console.log(props)\n\n  // const anim = useSpring({config: { duration: 500 }, opacity: 1, from: {opacity: 0}})\n\n  if(props.isSent){\n    return (\n      <motion.div\n          style={{opacity: 0}}\n          animate={\n            {opacity: 1}\n          }\n          className=\"break-all px-6 py-1 m-auto w-max max-w-full bg-white rounded-xl shadow-md flex flex-row-reverse space-x-4 self-end\">\n        <MessagePhoto isSent username={props.sender.username}/>\n        <MessageContent isSent name={props.sender.username} content={props.content}/>\n      </motion.div>\n    )\n  } else {\n    return (\n      <motion.div\n          style={{opacity: 0}}\n          animate={\n            {opacity: 1}\n          }\n          className=\"break-all px-6 py-1 m-auto w-max max-w-full bg-white rounded-xl shadow-md flex space-x-4\">\n        <MessagePhoto isSent username={props.sender.username}/>\n        <MessageContent name={props.sender.username} content={props.content}/>\n      </motion.div>\n    )\n  }\n}\n\nexport default MessageCard;","import MessageCard from './MessageCard'\nimport {useEffect} from 'react';\n\nfunction MessageBoard(props) {\n\n  var messagesEnd = null;\n\n  useEffect(() => {\n    scrollToBottom()\n  })\n\n  const getMessages = () => {\n    return props.messages.data.map((msgObj, index) => \n      <MessageCard isSent={msgObj.isSent} sender={msgObj.sender} content={msgObj.text} key={index}/>\n    )\n  }\n\n  const scrollToBottom = () => {\n    messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  // useEffect(async () => {\n  //   const id = Math.floor(Math.random()*499)\n  //   const response = await API.get(`comments/${id}`)\n  //   console.log(response.data['name'])\n  // }, [])\n\n  return (\n    <div className=\"max-h-full space-x-5 space-y-5 overflow-y-scroll overflow-x-hidden flex flex-col items-start\">\n      <div></div>\n      {getMessages()}\n      <div id=\"dummyDiv\" ref={(el) => { messagesEnd = el}}></div>\n    </div>\n  )\n}\n\nexport default MessageBoard;","import {useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction NavBarUser(props) {\n\n  // const [dropdownToggled, setDropdownToggle] = useState(false);\n\n  const [isMobileMenuShown, setMobileMenuShow] = useState(false);\n\n  // const toggleDropdown = () => {\n  //   setDropdownToggle(!dropdownToggled);\n  // }\n\n  const toggleMobileMenu = () => {\n    setMobileMenuShow(!isMobileMenuShown);\n  }\n\n  return (\n    <nav className=\"bg-gray-800\">\n    <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n        <div className=\"relative flex items-center justify-between h-16\">\n        <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n            {/* Mobile menu button*/}\n            <button onClick={toggleMobileMenu} type=\"button\" className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 outline-none focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n            <span className=\"sr-only\">Open main menu</span>\n            {/*\n        Icon when menu is closed.\n\n        Heroicon name: outline/menu\n\n        Menu open: \"hidden\", Menu closed: \"block\"\n        */}\n            <svg className=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n            </svg>\n            {/*\n        Icon when menu is open.\n\n        Heroicon name: outline/x\n\n        Menu open: \"block\", Menu closed: \"hidden\"\n        */}\n            <svg className=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n            </button>\n        </div>\n        <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n            <div className=\"flex-shrink-0 flex items-center\">\n            <img className=\"hidden lg:block h-8 w-auto\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/ICloud_logo.svg/640px-ICloud_logo.svg.png\" alt=\"Workflow\" />\n            </div>\n            <div className=\"hidden sm:block sm:ml-6\">\n              <div className=\"flex space-x-4\">\n                  {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\n                  <NavLink to=\"/gpt\"\n                          className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\n                          activeClassName=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\">\n                            GPT-3 Chat\n                          </NavLink>\n                  <NavLink to=\"/global\"\n                          className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\n                          activeClassName=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\">\n                            Global chat\n                          </NavLink>\n              </div>\n            </div>\n        </div>\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n\n            {/* Profile dropdown */}\n            <div className=\"ml-3 relative\">\n              <div className=\"flex space-x-4\">\n                  {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\n                  <NavLink to=\"/login\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\" activeClassName=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\">Login</NavLink>\n                  <NavLink to=\"/signup\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\" activeClassName=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\">Sign up</NavLink>\n              </div>\n            </div>\n        </div>\n        </div>\n    </div>\n    {/* Mobile menu, show/hide based on menu state. */}\n    {isMobileMenuShown ?\n      <div className=\"\" id=\"mobile-menu\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\n          {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\n            <NavLink to=\"/login\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\" activeClassName=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\">Login</NavLink>\n            <NavLink to=\"/signup\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\" activeClassName=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\">Sign up</NavLink>\n          </div>\n      </div>\n    : <div></div>}\n    </nav>\n  )\n}\n  \nexport default NavBarUser;","import {useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nfunction NavBarUser(props) {\n\n  const [dropdownToggled, setDropdownToggle] = useState(false);\n\n  const [isMobileMenuShown, setMobileMenuShow] = useState(false);\n\n  const toggleDropdown = () => {\n    setDropdownToggle(!dropdownToggled);\n  }\n\n  const toggleMobileMenu = () => {\n    setMobileMenuShow(!isMobileMenuShown);\n  }\n\n  return (\n    <nav className=\"bg-gray-800\">\n    <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n        <div className=\"relative flex items-center justify-between h-16\">\n        <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n            {/* Mobile menu button*/}\n            <button onClick={toggleMobileMenu} type=\"button\" className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 outline-none focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n            <span className=\"sr-only\">Open main menu</span>\n            {/*\n        Icon when menu is closed.\n\n        Heroicon name: outline/menu\n\n        Menu open: \"hidden\", Menu closed: \"block\"\n        */}\n            <svg className=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n            </svg>\n            {/*\n        Icon when menu is open.\n\n        Heroicon name: outline/x\n\n        Menu open: \"block\", Menu closed: \"hidden\"\n        */}\n            <svg className=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n            </button>\n        </div>\n        <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n            <div className=\"flex-shrink-0 flex items-center\">\n            <img className=\"hidden lg:block h-8 w-auto\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/ICloud_logo.svg/640px-ICloud_logo.svg.png\" alt=\"Workflow\" />\n            </div>\n            <div className=\"hidden sm:block sm:ml-6\">\n              <div className=\"flex space-x-4\">\n                  {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\n                  <NavLink to=\"/gpt\"\n                          className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\n                          activeClassName=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\">\n                            GPT-3 Chat\n                          </NavLink>\n                  <NavLink to=\"/global\"\n                          className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\n                          activeClassName=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\">\n                            Global chat\n                          </NavLink>\n              </div>\n            </div>\n        </div>\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n            <button className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n            <span className=\"sr-only\">View notifications</span>\n            {/* Heroicon name: outline/bell */}\n            <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n            </svg>\n            </button>\n            {/* Profile dropdown */}\n            <div className=\"ml-3 relative\">\n            <div>\n                <button onClick={toggleDropdown} type=\"button\" className=\"bg-gray-800 flex text-sm rounded-full focus:outline-none\" id=\"user-menu\" aria-expanded=\"false\" aria-haspopup=\"true\">\n                <span className=\"sr-only\">Open user menu</span>\n                <img className=\"h-8 w-8 rounded-full\" src={\"http://192.168.0.10:4000/images/\" + props.user.uid + \".jpeg\"} alt=\"\" />\n                </button>\n            </div>\n            {dropdownToggled ? \n              <div className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                  <NavLink to=\"/profile\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\" role=\"menuitem\">Your Profile</NavLink>\n                  <NavLink to=\"/settings\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\" role=\"menuitem\">Settings</NavLink>\n                  <NavLink to=\"/logout\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\" role=\"menuitem\">Sign out</NavLink>\n              </div>\n              : <div></div>\n            }\n            </div>\n        </div>\n        </div>\n    </div>\n    {/* Mobile menu, show/hide based on menu state. */}\n    {isMobileMenuShown ?\n      <div className=\"\" id=\"mobile-menu\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\n          {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\n            <NavLink to=\"/gpt\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\" activeClassName=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\">GPT-3 Chat</NavLink>\n            <NavLink to=\"/global\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\" activeClassName=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\">Global chat</NavLink>\n          </div>\n      </div>\n    : <div></div>}\n    </nav>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.user.loggedIn,\n    user: state.user.userInfo\n  }\n}\n\nexport default connect(mapStateToProps, null)(NavBarUser);","import NavBarGuest from \"./NavBarGuest\";\nimport NavBarUser from \"./NavBarUser\";\nimport { isLoggedIn } from '../SessionLogic'\n\nfunction NavBar(props) {\n    if(isLoggedIn()){\n        return <NavBarUser />\n    } else {\n        return <NavBarGuest />\n    }\n}\n\nexport default NavBar;","import MessageBoard from './components/MessageBoard'\nimport NavBar from './components/NavBar'\nimport { useEffect, useState } from 'react';\nimport io from \"socket.io-client\";\nimport { connect } from 'react-redux'\n\nfunction ChatPage(props) {\n\n  const [messages, setMessages] = useState({data: []})\n  const [inputText, setInputText] = useState(\"\")\n  const [socket, setSocket] = useState(null)\n\n  useEffect(() => {\n    const newSocket = io(process.env.REACT_APP_GPT_URL) \n    setSocket(newSocket)\n  }, [])\n  \n  useEffect(() => {\n    console.log(\"socket changed\")\n    if(socket != null){\n      console.log(props.roomName)\n      console.log(props.roomName)\n      console.log(props.roomName)\n      console.log(props.roomName)\n      socket.emit(\"roomJoin\", {roomName: props.roomName})\n      socket.on(\"response\", data => {\n        addMessage(data)\n      });\n      return () => socket.disconnect();\n    }\n  }, [socket])\n\n  var inputEl = null;\n\n  const addMessage = (msgObj) => {\n    setMessages(oldMessages => ({ data: [...oldMessages.data, msgObj]}))\n  }\n\n  // const getRandomMessage = async () => {\n  //   const id = Math.floor(Math.random()*499)\n  //   const response = await API.get(`comments/${id}`)\n  //   if(response.status == 200) {\n  //     return response.data['name']\n  //   }\n  //   return \"Api offline\"\n  // }\n  \n  const sendMessage = () => {\n    setInputText(inputText.trim())\n    if(socket == null){\n      alert(\"socket is null\")\n      return\n    }\n    if(inputText != \"\"){\n      const newMessageData = { text: inputText, isSent: true, sender: props.user, time: (new Date()).toLocaleString()}\n      socket.emit(\"message\", newMessageData)\n      addMessage(newMessageData)\n      inputEl.value = \"\"\n    }\n    setInputText(\"\")\n  }\n\n  const handleKeyInput = (e) => {\n    if(e.key === 'Enter'){\n      sendMessage()\n    }\n  }\n\n  const textInputChanged = (e) => {\n    setInputText(e.target.value)\n  }\n\n  // const addRandomMessage = async () => {\n  //   const newMessage = await getRandomMessage()\n  //   const newMessageData = { text: inputText, isSent: false, sender: \"me\", time: new Date()}\n  //   addMessage(newMessage)\n  // }\n\n  return (\n    <div className=\"h-screen\">\n      <div className=\"h-1/10\">\n        <NavBar user={props.user} />\n      </div>\n      <main>\n        <div class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n          <div class=\"px-4 py-6 sm:px-0\">\n            <div class=\"border-4 shadow-lg border-gray-200 rounded-lg h-96\">\n              <MessageBoard messages={messages}/>\n            </div>\n          </div>\n          <div className=\"flex flex-row items-center content-center gap-3\">\n            {/* <div className=\"mr-auto pl-px\">\n              <button className=\"text-black-300 border-gray-300 border-2 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium focus:outline-none\" onClick={addRandomMessage}>\n                Add random message\n              </button>\n            </div> */}\n            <div className=\"flex-grow\">\n              <input type=\"text\" placeholder=\"Enter message\" \n                onChange={textInputChanged}\n                onKeyPress={handleKeyInput}\n                ref={(el) => { inputEl = el}}\n                class=\"px-3 py-3 w-full placeholder-blueGray-300 text-blueGray-600 relative bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring\"/>\n            </div>\n            <div className=\"pr-px\">\n              <button className=\"text-black-300 border-gray-300 border-2 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium focus:outline-none\" onClick={sendMessage}>\n                Send\n              </button>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.userInfo\n  }\n}\n\nexport default connect(mapStateToProps, null)(ChatPage);","import ChatPage from './ChatPage';\n\nfunction ChatPageRobot(props) {\n  return <ChatPage roomName={process.env.REACT_APP_ROBOT_ROOM}/>\n}\n\nexport default ChatPageRobot;","import ChatPage from './ChatPage';\n\nfunction ChatPageGlobal(props) {\n  return <ChatPage roomName={process.env.REACT_APP_GLOBAL_ROOM}/>\n}\n\nexport default ChatPageGlobal;","import { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport NavBar from \"./components/NavBar\";\n\nfunction Home(props) {\n\n  return <Redirect to={{pathname: '/gpt', state: {from: props.location}}} />\n\n  return (\n    <div className=\"h-screen\">\n      <div className=\"h-1/10\">\n        <NavBar />\n      </div>\n      <div className=\"h-screen\">\n\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import {Redirect, Route} from 'react-router-dom';\nimport {Header, Shell, Footer} from 'react';\nimport { isLoggedIn, isLoggedJWTPoll } from './SessionLogic'\n\nfunction Authed ({component: Component, hasFooterHeader, ...rest}) {\n  const authed = isLoggedIn();\n  let page = null;\n  if (hasFooterHeader) {\n    page = (\n      <div>\n        <Header />\n        <Shell>\n          <Component {...rest} />\n        </Shell>\n        <Footer />\n      </div>\n    );\n  } else {\n    page = <Component {...rest} />;\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) => authed == true\n        ? page\n        : (isLoggedJWTPoll()\n          ? page\n          : <Redirect to={{pathname: '/login', state: {from: props.location}}} />)}\n    />\n  )\n}\n\nexport default Authed;","import {Redirect, Route} from 'react-router-dom';\nimport {Header, Shell, Footer} from 'react';\nimport { isLoggedIn } from './SessionLogic'\n\nfunction Unauthed ({component: Component, hasFooterHeader, ...rest}) {\n  const authed = isLoggedIn();\n  let page = null;\n  if (hasFooterHeader) {\n    page = (\n      <div>\n        <Header />\n        <Shell>\n          <Component {...rest} />\n        </Shell>\n        <Footer />\n      </div>\n    );\n  } else {\n    page = <Component {...rest} />;\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) => authed == false\n        ? page\n        : <Redirect to={{pathname: '/', state: {from: props.location}}} />}\n    />\n  )\n}\n\nexport default Unauthed;","import { LOGIN, LOGOUT } from './user.types'\n\nexport const logIn = (userInfo, token) => {\n    console.log(\"LOGGING IN\")\n    console.log(\"user: \", userInfo)\n    console.log(\"token: \", token)\n    return {\n        type: LOGIN,\n        userInfo: userInfo,\n        token: token\n    }\n}\n\nexport const logOut = () => {\n    console.log(\"LOGGING OUT\")\n    return {\n        type: LOGOUT,\n    }\n}","import NavBar from \"./components/NavBar\";\nimport { UserLogin } from \"./SessionLogic\";\nimport GoogleLogin from 'react-google-login'\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { connect } from 'react-redux'\nimport { logIn, logOut } from './redux/User/user.actions'\n\nfunction Login(props) {\n\n  var usernameEl = null;\n  var passwordEl = null;\n\n  const [confirmStatus, setConfirmStatus] = useState(\"\")\n  const [redirectHome, setredirectHome] = useState(false)\n\n  const handleLoginClick = () => {\n    if(!usernameEl.value || !passwordEl.value){\n      return\n    }\n    setConfirmStatus(\"Logging in...\")\n    UserLogin(usernameEl.value, passwordEl.value)\n      .then((res) => {\n        if(res.data.ok){\n          console.log(res.data)\n\n          const userInfo = res.data.user\n          const token = res.data.token\n\n          props.logIn(userInfo, token)\n\n          setConfirmStatus(res.data.message)\n          setTimeout(() => {\n            setredirectHome(true)\n          }, 500)\n        } else {\n          setConfirmStatus(res.data.message)\n        }\n    }).catch((error) => {\n        setConfirmStatus(\"Request error\")\n        console.log(\"Error logging in\")\n        console.log(error.reponse)\n    })\n  }\n\n  useEffect(() => {\n    props.logOut()\n  }, [])\n  \n  const responseGoogle = (reponse) => {\n    console.log(reponse)\n  }\n\n  if(redirectHome){\n    return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n  }\n\n  return (\n    <div className=\"h-screen\">\n      <div className=\"h-1/10\">\n        <NavBar user={props.user} />\n      </div>\n      <div className=\"lg:w-1/2 xl:max-w-screen-sm m-auto\">\n        <div className=\"mt-10 px-12 sm:px-24 md:px-48 lg:px-12 lg:mt-16 xl:px-24 xl:max-w-2xl\">\n          <h2 className=\"text-center text-4xl text-gray-800 font-display font-semibold lg:text-center xl:text-5xl\n                    xl:text-bold\">Log in</h2>\n          <div className=\"mt-12 flex flex-col\">\n            <div>\n              <form onSubmit={(e) => {e.preventDefault()}}>\n                <div>\n                  <div className=\"text-sm font-bold text-gray-700 tracking-wide\">Username</div>\n                  <input className=\"w-full text-lg py-2 border-b border-gray-300 focus:outline-none focus:border-indigo-500\" type placeholder=\"SillyGoose99\" ref={(el) => { usernameEl = el}}/>\n                </div>\n                <div className=\"mt-8\">\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"text-sm font-bold text-gray-700 tracking-wide\">\n                      Password\n                    </div>\n                    <div>\n                      <Link to=\"forgot-password\"className=\"text-xs font-display font-semibold text-indigo-600 hover:text-indigo-800\n                                          cursor-pointer\">\n                        Forgot Password?\n                      </Link>\n                    </div>\n                  </div>\n                  <input type=\"password\" name=\"password\" className=\"w-full text-lg py-2 border-b border-gray-300 focus:outline-none focus:border-indigo-500\" placeholder=\"Enter your password\" ref={(el) => { passwordEl = el}}/>\n                </div>\n                <div className=\"mt-10\">\n                  <button className=\"bg-gray-800 text-gray-100 p-4 w-full rounded-full tracking-wide\n                                  font-semibold font-display focus:outline-none focus:shadow-outline hover:bg-gray-400\n                                  shadow-lg\" onClick={handleLoginClick}>\n                    Log In\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div className=\"mt-5 self-center\">\n              <GoogleLogin className=\"font-bold\"\n                clientId=\"408678250871-16cqcdjpg1hggln0si3o2j4dcenl4opj.apps.googleusercontent.com\"\n                buttonText=\"Log in with Google\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={'single_host_origin'}\n              />\n            </div>\n            <div className=\"mt-12 text-sm font-display font-semibold text-gray-700 text-center\">\n              Don't have an account ? <Link to=\"/signup\" className=\"cursor-pointer text-indigo-600 hover:text-indigo-800\">Sign up</Link>\n            </div>\n            <motion.div \n            className={\"mt-2 self-center font-bold content-center \" + \n                      (confirmStatus == \"Logging in...\" ? \"text-yellow-500\"\n                      : (confirmStatus == \"Success\" ? \"text-green-600\" : \"text-red-700\"))}> \n            {confirmStatus}\n          </motion.div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.userInfo\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logIn: (userInfo, token) => dispatch(logIn(userInfo, token)),\n    logOut: () => dispatch(logOut()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import { useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { logOut } from './redux/User/user.actions'\nimport { connect } from 'react-redux'\n\nfunction Logout(props){\n    useEffect(() => {\n        props.logOut()\n    }, [])\n    return <Redirect to={{pathname: '/login', state: {from: props.location}}} />;\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.userInfo\n  }\n}\n  \nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logOut: () => dispatch(logOut()),\n  }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);","import { Redirect } from \"react-router\";\n\nfunction Page404(props) {\n\n  return (\n    <Redirect to={{pathname: '/', state: {from: props.location}}} />\n  );\n}\n\nexport default Page404;","import { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport NavBar from \"./components/NavBar\";\nimport { setCookie, UserSignUp } from \"./SessionLogic\";\n\nfunction SignUp(props) {\n\n  var usernameEl = null;\n  var emailEl = null;\n  var passwordEl = null;\n\n  const [redirectLogin, setRedirectLogin] = useState(false)\n  const [confirmStatus, setConfirmStatus] = useState(\"\")\n\n  const handleSignUpClick = () => {\n    if(!usernameEl.value || !passwordEl.value || !emailEl.value){\n      return\n    }\n    setConfirmStatus(\"Signing up...\")\n    UserSignUp({\n        username: usernameEl.value,\n        email: emailEl.value,\n        password: passwordEl.value\n    }).then((res) => {\n        if(res.data.ok){\n          setConfirmStatus(res.data.message)\n          setTimeout(() => {\n            setRedirectLogin(true)\n          }, 500)\n        } else {\n          setConfirmStatus(res.data.message)\n        }\n    }).catch((error) => {\n        setConfirmStatus(`${error}`)\n        console.log(\"Error signing up\")\n        console.log(error)\n    })\n  }\n\n  if(redirectLogin){\n    return <Redirect to={{pathname: '/login', state: {from: props.location}}} />\n  }\n  return (\n    <div className=\"h-screen\">\n      <div className=\"h-1/10\">\n        <NavBar user={props.user} />\n      </div>\n      <div className=\"lg:w-1/2 xl:max-w-screen-sm m-auto\">\n        <div className=\"mt-10 px-12 sm:px-24 md:px-48 lg:px-12 lg:mt-16 xl:px-24 xl:max-w-2xl flex flex-col\">\n          <h2 className=\"text-center text-4xl text-gray-800 font-display font-semibold lg:text-center xl:text-5xl\n                    xl:text-bold\">Sign up</h2>\n          <div className=\"mt-12\">\n            <form onSubmit={(e) => {e.preventDefault()}}>\n              <div>\n                <div className=\"text-sm font-bold text-gray-700 tracking-wide\">Username</div>\n                <input className=\"w-full text-lg py-2 border-b border-gray-300 focus:outline-none focus:border-indigo-500\" type placeholder=\"SillyGoose99\" ref={(el) => { usernameEl = el}}/>\n              </div>\n              <div className=\"mt-8\">\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"text-sm font-bold text-gray-700 tracking-wide\">\n                    Email\n                  </div>\n                </div>\n                <input className=\"w-full text-lg py-2 border-b border-gray-300 focus:outline-none focus:border-indigo-500\" placeholder=\"Enter your password\" ref={(el) => { emailEl = el}}/>\n              </div>\n              <div className=\"mt-8\">\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"text-sm font-bold text-gray-700 tracking-wide\">\n                    Password\n                  </div>\n                </div>\n                <input type=\"password\" name=\"password\" className=\"w-full text-lg py-2 border-b border-gray-300 focus:outline-none focus:border-indigo-500\" placeholder=\"Enter your password\" ref={(el) => { passwordEl = el}}/>\n              </div>\n              <div className=\"mt-10\">\n                <button className=\"bg-gray-800 text-gray-100 p-4 w-full rounded-full tracking-wide\n                                font-semibold font-display focus:outline-none focus:shadow-outline hover:bg-gray-400\n                                shadow-lg\" onClick={handleSignUpClick}>\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n          <motion.div \n            className={\"mt-2 self-center font-bold content-center \" + \n                      (confirmStatus == \"Signing up...\" ? \"text-yellow-500\"\n                      : (confirmStatus == \"Done!\" ? \"text-green-600\" : \"text-red-700\"))}> \n            {confirmStatus}\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n}\n  \nexport default SignUp;","import NavBar from \"./components/NavBar\";\nimport { UserLogin, getPhotoUrl } from \"./SessionLogic\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { connect } from 'react-redux'\nimport axios from \"axios\";\n\nfunction Profile(props) {\n\n  const [editMode, setEditMode] = useState(false)\n  const [file, setFile] = useState(null)\n\n  const inputFileButton = useRef(null) \n\n  useEffect(() => {\n    // axios({\n    //   method: 'post',\n    //   'Content-Type': 'application/json',\n    //   url: `${protocol}://${backendUrl}/api/user/login`,\n    //   validateStatus: false,\n    // })\n  }, [file])\n\n  const selectPhoto = () => {\n    inputFileButton.current.click();\n  };\n\n  const fileChanged = (event) => {\n    setFile(event.target.files[0])\n  }\n  \n  return (\n    <div className=\"h-screen\">\n      <div className=\"h-1/10\">\n        <NavBar user={props.user} />\n      </div>\n      <div class=\"bg-white my-12 pb-6 w-full justify-center items-center overflow-hidden md:max-w-sm rounded-lg shadow-sm mx-auto\">\n      <div class=\"relative h-40\">\n        <img class=\"absolute h-full w-full object-cover\" src=\"https://images.unsplash.com/photo-1448932133140-b4045783ed9e?ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=80\"/>\n      </div>\n      <div onClick={selectPhoto} class=\"relative shadow mx-auto h-24 w-24 -my-12 border-white rounded-full overflow-hidden border-4\">\n          <input type='file' id='file' onChange={fileChanged} ref={inputFileButton} style={{display: 'none'}}/>\n          <img class=\"object-cover w-full h-full\" src={getPhotoUrl(props.user.username)}/>\n      </div>\n      <div class=\"mt-16\">\n        <h1 class=\"text-lg text-center font-semibold\">\n            {props.user.username}\n        </h1>\n        <p class=\"text-sm text-gray-600 text-center\">\n          {props.user.email}\n        </p>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.userInfo\n  }\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     logIn: (userInfo, token) => dispatch(logIn(userInfo, token)),\n//     logOut: () => dispatch(logOut()),\n//   }\n// }\n\nexport default connect(mapStateToProps, null)(Profile);","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport ChatPageRobot from \"./ChatPageRobot\";\nimport ChatPageGlobal from \"./ChatPageGlobal\";\nimport Home from \"./Home\"\nimport Authed from './Authed'\nimport Unauthed from './Unauthed'\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\nimport Page404 from \"./Page404\";\nimport Signup from \"./Signup\"\nimport Profile from './Profile'\n\nfunction App() {\n\n  return (\n      <Router basename={process.env.GH_DEPLOY ? process.env.REACT_APP_GHPAGES_ROUTE : \"\"}>\n        <Switch>\n          <Unauthed path=\"/login\" exact component={Login}/>\n          <Unauthed path=\"/signup\" exact component={Signup}/>\n          <Authed path=\"/\" exact component={Home}/>\n          <Authed path=\"/profile\" exact component={Profile}/>\n          <Authed path=\"/gpt\" exact component={ChatPageRobot}/>\n          <Authed path=\"/global\" exact component={ChatPageGlobal}/>\n          <Authed path=\"/logout\" exact component={Logout}/>\n          <Route component={Page404}/>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}